# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

on:
  push:
    branches:
      - master
  pull_request:
name: code-coverage-check
jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v2
        with:
          go-version: "1.19"

      - name: Unit tests
        run: |
          go test ./... -coverprofile coverage.out -covermode count
          go tool cover -func coverage.out

      - name: Quality Gate - Test coverage should be above threshold
        env:
          TESTCOVERAGE_THRESHOLD: 50
        run: |
          echo "Quality Gate: checking if test coverage is above threshold ..."
          echo "Threshold             : $TESTCOVERAGE_THRESHOLD %"
          totalCoverage=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          echo "Current test coverage : $totalCoverage %"
          if (( $(echo "$totalCoverage $TESTCOVERAGE_THRESHOLD" | awk '{print ($1 > $2)}') )); then
              echo "OK"
          else
              echo "Current test coverage is below threshold. Please add more unit tests or adjust threshold to a lower value."
              echo "Failed"
              exit 1
          fi
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        comment:
          layout: "header, diff, components" # show component info in the PR comment

        component_management:
          default_rules: # default rules that will be inherited by all components
            statuses:
              - type: project # in this case every component that doens't have a status defined will have a project type one
                target: auto
                base: auto
                threshold: 50%
                branches:
                  - master
          individual_components:
            - component_id: backend-apis # this is an identifier that should not be changed
              name: backend-apis # this is a display name, and can be changed freely
              paths:
                - "webv2/**"
            - component_id: backend-library
              name: backend-library
              paths:
                - "!webv2/**"
                - "!ui/**"
            - component_id: frontend
              name: frontend
              paths:
                - ui/**
              statuses: # the core component has its own statuses
                - type: project
                  target: auto
                  base: auto
                  threshold: 0%
